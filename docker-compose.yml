services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fingerprint-postgres
    environment:
      POSTGRES_DB: FingerPrintVerificationDb
      POSTGRES_USER: fingerprint_user
      POSTGRES_PASSWORD: fingerprint_password123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fingerprint-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fingerprint_user -d FingerPrintVerificationDb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ASP.NET Core Application
  fingerprint-app:
    build:
      context: .
      dockerfile: FingerPrintVerfication/Dockerfile
    container_name: fingerprint-app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=FingerPrintVerificationDb;Username=fingerprint_user;Password=fingerprint_password123
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fingerprint-network
    restart: unless-stopped
    volumes:
      - ./FingerPrintVerfication/wwwroot/Attachments:/app/wwwroot/Attachments
      - C:/fingerprints:/app/fingerprints

  # PgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fingerprint-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fingerprint.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - fingerprint-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  fingerprint-network:
    driver: bridge
